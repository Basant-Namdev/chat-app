<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>chat application</title>
    <link rel="stylesheet" href="../public/dashbord.css">
</head>

<body>
    <!-- dashbord container-->
    <div id="cont">
        <!-- menu container -->
        <div id="dashbord" style="background-color: darkslategrey;">
            <ul id="menu-cont">
                <li class="menu menuFunc">
                    <i class="fa-regular fa-comment-dots"></i>
                    <span class="menuText">userChats</span>
                </li>
                <li class="menu menuFunc">
                    <i class="fa-solid fa-user-group"></i>
                    <span class="menuText">friends</span>
                </li>
                <li class="menu menuFunc">
                    <i class="fa-solid fa-users-between-lines"></i>
                    <span class="menuText">allUsers</span>
                </li>
                <li class="menu menuFunc">
                    <i class="fa-solid fa-key"></i>
                    <span class="menuText">resetPassword</span>
                </li>
                <li class="menu menuFunc">
                    <a href="/dashbord/logout" style="color: black ;"><i class="fa-solid fa-right-from-bracket"></i></a>
                    <span class="menuText">logout</span>
                </li>
                <li id="user-part" class="menuFunc" style="cursor: pointer;">
                    <img src="<%= loginUser.profile%>" alt="" >
                    <span class="menuText">profile</span>
                </li>
            </ul>
        </div>
        <!-- it contains user list -->
        <div class="webPageCont"></div>
        <!-- it is to establish personal chat -->
        <div id="personal-chat" style="width: 100%; height: 43.2rem; border: 2px solid grey; position: relative;"">
            <div id="personal-chat-child-1">Click on a chat to start a conversation</div>
        <div id="personal-chat-child-2">
            <div id="specific-user">
                <img src="" alt="">
                <span></span>
                <i id="cross" onclick="closeChat()" class="fa-regular fa-circle-xmark"></i>
            </div>
            <form action="" id="chatCont">
                <div id="msg-cont"></div>
                <input type="text" name="message" id="msg" placeholder="Enter your message here" autocomplete="off">
                <button id="send" type="submit">Send</button>
            </form>

        </div>
    </div>
    </div>
    <script src="https://kit.fontawesome.com/126cda3aca.js" crossorigin="anonymous"></script>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        // connect to the '/chat' namespace
        const socket = io('/chat', {
            query: {
                username: `<%=loginUser._id%>`
            }
        });
        const msgScreen = document.getElementById('msg-cont');
        const input = document.getElementById('msg');
        const sender = document.getElementById('send');
        const userList = document.getElementsByClassName('user');
        const menuList = document.getElementsByClassName('menuFunc');
        const menuText = document.getElementsByClassName('menuText');
        

        // code for different functionalities of dashbord
        for (let i = 0; i < menuList.length; i++) {
            menuList[i].addEventListener('click', function () {
                fetch(`/dashbord/${menuText[i].innerText}`)
                    .then(response => response.text())
                    .then((html) => {
                        document.querySelector('.webPageCont').innerHTML = html;
                        eval(document.querySelector('.webPageCont').querySelector('#js').text);
                    })
                    .catch(error => console.error('Error fetching webpage:', error));
            })
        }
        // code for chat functionality
        function chat(e) {
            document.getElementById('cross').style.display = "block"
                document.getElementById('personal-chat-child-2').style.display = "block";
                document.getElementById('personal-chat-child-1').style.display = "none";
                msgScreen.innerHTML = "";
                // to open chat window
                document.getElementById('specific-user').getElementsByTagName('span')[0].innerHTML = e.target.parentNode.previousElementSibling.querySelector('span').innerText;
                document.getElementById('specific-user').getElementsByTagName('img')[0].src = e.target.parentNode.previousElementSibling.querySelector('img').src;
                // Send a message to a specific user (creating one to one connection)               
                socket.emit('one to one', {
                    to: e.target.dataset.user
                });
                // fetching old chats
                const response = fetch('/dashbord/loadChat', {
                    method: 'POST',
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        recieverId: e.target.dataset.user
                    })
                }).then(response => response.json()).then(data => {
                    data.forEach((item) => {
                        if (`<%=loginUser._id%>` == item.sender) {
                            let oldMsg = document.createElement("span");
                            let div = document.createElement("div");
                            div.className = "user-msg-cont";
                            oldMsg.className = "user-msg";
                            oldMsg.innerText = `${item.message}`
                            div.appendChild(oldMsg);
                            msgScreen.appendChild(div);
                            msgScreen.scrollTop = msgScreen.scrollHeight;

                        } else {
                            let oldMsg = document.createElement("span");
                            let div = document.createElement("div");
                            oldMsg.className = "reciever-msg";
                            div.className = "reciever-msg-cont";
                            oldMsg.innerText = `${item.message}`;
                            div.appendChild(oldMsg);
                            msgScreen.appendChild(div);
                            msgScreen.scrollTop = msgScreen.scrollHeight;

                        }
                    })
                })
        }

        // to send the message to the user
        sender.addEventListener("click", () => {
            if (input.value) {
                let newMsg = document.createElement("span");
                let div = document.createElement("div");
                div.className = "user-msg-cont";
                newMsg.className = "user-msg";
                newMsg.innerText = input.value;
                div.appendChild(newMsg);
                msgScreen.appendChild(div);
                msgScreen.scrollTop = msgScreen.scrollHeight;
                socket.emit('new message', input.value);
                input.value = '';
            }
        });

        // receiving message from user
        socket.on('message', (msg) => {
            let newMsg = document.createElement("span");
            let div = document.createElement("div");
            newMsg.className = "reciever-msg";
            div.className = "reciever-msg-cont";
            newMsg.innerText = msg;
            div.appendChild(newMsg);
            msgScreen.appendChild(div);
            msgScreen.scrollTop = msgScreen.scrollHeight;
        })

        document.getElementById("chatCont").addEventListener("submit", (e) => {
            e.preventDefault();
        })
        // closing chat
        function closeChat() {
            document.getElementById('cross').style.display = "none"
            document.getElementById('personal-chat-child-2').style.display = "none"
            document.getElementById('personal-chat-child-1').style.display = "block";
        }
    </script>
</body>

</html>