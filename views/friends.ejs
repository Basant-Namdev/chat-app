<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        /* .btn {
            display: flex;
            position: relative;
            top: -3.5rem;
            left: 15rem;
            width: 38%;
            justify-content: space-between;
        } */

        .accpet-btn {
            background-color: #17aa17;
            font-size: 1.3rem;
            padding: 0.3rem;
            font-weight: bold;
            border-radius: 1rem;
            width: 7rem;
            cursor: pointer;
        }

        .accpet-btn:active {
            transform: translateY(2px);
        }

        #search {
            color: white;
            width: 98%;
            height: 2.1rem;
            border-radius: 1rem;
            background: #a9a9a945;
            margin: 20px 0px 20px 4px;
            padding: 1rem;
            font-size: 1rem;
        }

        .cancel {
            color: red;
            font-size: 2.3rem;
            cursor: pointer;
        }

        .cancel:active {
            transform: translateY(2px);
        }

        .message-opt {
            background-color: #808080ab;
            font-size: 1.2rem;
            padding: 0.4rem;
            font-weight: bold;
            border-radius: 1rem;
            cursor: pointer;
        }

        /* .user-req-container,
            .user-container {
                height: 5.7rem;
            } */

        #friendReq {
            box-shadow: 0px 0px 2px white;
            margin-bottom: 0.8rem;
            background: #c0c0c066;
        }

        .arrow {
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .arrow:first-child {
            display: none;
        }

        .friends-count {
            display: inline-block;
            text-align: center;
            color: white;
            background-color: red;
            width: .7rem;
            border-radius: 50%;
            padding: .3rem;
            height: .7rem;
            line-height: 12px;
        }
    </style>
</head>

<body>
    <input type="search" name="search" id="search" placeholder="search here...">
    <div style="height: 90vh; overflow-y: auto; 
    scrollbar-width: none;
    -ms-overflow-style: none;"">
    <div id="friendReq">
        <div style="padding: .5rem;display: flex;justify-content: space-between;">
            <p style="color: white;">
                friend requests
                <span class="friends-count">
                    <%=friendReq.length%>
                </span>
            </p>
            <span>
                <i class="fa-solid fa-angle-up arrow"></i><i class="fa-solid fa-angle-down arrow"></i>
            </span>
        </div>
        <div id="requests" style="display: none; height: 30vh; overflow-y: auto; 
    scrollbar-width: none;
    -ms-overflow-style: none;">
            <% for(let i=0; i<friendReq.length ; i++) { %>
                <div class="user-req-container user-container">
                    <div class="user" data-user="<%= friendReq[i]._id%>">
                        <img src="<%= friendReq[i].profile%>" alt="">
                        <span>
                            <%= friendReq[i].name%>
                        </span>
                    </div>
                    <div class="btn" style="display: flex; ">
                        <button class="accpet-btn username" style="margin-right: .7rem;"
                            data-user="<%= friendReq[i]._id%>"
                            onclick="acceptFriendRequest(this, document.querySelector('.friends-count').innerText)">Accpet</button>
                        <div><i class="fa-solid fa-square-xmark cancel" id="friends_deleteReq"
                                onclick="deleteFriendRequest('<%=friendReq[i]._id%>', event, document.querySelector('.friends-count').innerText)"></i>
                        </div>
                    </div>
                </div>
                <% } %>
        </div>
    </div>
    <div id="friends" style="height: 82vh; overflow-y: auto; 
    scrollbar-width: none;
    -ms-overflow-style: none;">
        <% if(friends.length > 0) { for(let i=0; i<friends.length ; i++) { %>
            <div class="user-container">
                <div class="user" data-user="<%= friends[i]._id%>">
                    <img src="<%= friends[i].profile%>" alt="">
                    <span>
                        <%= friends[i].name%>
                    </span>
                </div>
                <div class="btn">
                    <button class="message-opt" data-user="<%= friends[i]._id%>" onclick="chat(event)">Send
                        message</button>
                </div>
            </div>
            <% }} else { %>
                <div style="color: white; text-align: center;margin-top: 3rem;">No Friends</div>
            <% }%>
    </div>
    </div>

    <script src="https://kit.fontawesome.com/126cda3aca.js" crossorigin="anonymous"></script>
    <script id="js">
        let Req_Count = `<%=friendReq.length%>`
        if (Req_Count == 0) {
            document.querySelector('.friends-count').style.display = 'none'
        }
        // showing friend request count
        const arrowIcons = document.getElementsByClassName('arrow');

        for (let i = 0; i < 2; i++) {
            document.getElementsByClassName('arrow')[i].addEventListener('click', () => {
                const requestsContainer = document.getElementById('requests');
                if (requestsContainer.style.display === 'none') {
                    arrowIcons[1].style.display = 'none';
                    arrowIcons[0].style.display = 'block';
                    requestsContainer.style.display = 'block';
                } else {
                    arrowIcons[1].style.display = 'block';
                    arrowIcons[0].style.display = 'none';
                    requestsContainer.style.display = 'none';
                }
            });
        }
        // Function to filter users by name in both friend requests and friends lists
        function filterUsers() {
            const filter = document.getElementById('search').value.toLowerCase();

            // Filter friend requests
            const friendReqContainers = document.querySelectorAll('#requests .user-req-container');
            friendReqContainers.forEach(container => {
                const name = container.querySelector('.user span').textContent.toLowerCase();
                container.style.display = name.includes(filter) ? '' : 'none';
            });

            // Filter friends list
            const friendContainers = document.querySelectorAll('#friends .user-container');
            friendContainers.forEach(container => {
                const name = container.querySelector('.user span').textContent.toLowerCase();
                container.style.display = name.includes(filter) ? '' : 'none';
            });
        }

        // Attach search input listener
        document.getElementById('search').addEventListener('input', filterUsers);


        // showing user in the list of friend requests
        socket.on('friendRequest', (friendReq, count) => {
            // Create the main container
            const userReqContainer = document.createElement('div');
            userReqContainer.className = 'user-req-container user-container';

            // Create the user div
            const userDiv = document.createElement('div');
            userDiv.className = 'user';
            userDiv.setAttribute('data-user', friendReq._id);

            // Create the image element
            const img = document.createElement('img');
            img.src = friendReq.profile;
            img.alt = '';

            // Create the span for the name
            const span = document.createElement('span');
            span.textContent = friendReq.name;

            // Append the image and span to the user div
            userDiv.appendChild(img);
            userDiv.appendChild(span);

            // Create the button container
            const btnDiv = document.createElement('div');
            btnDiv.className = 'btn';

            // Create the accept button
            const acceptButton = document.createElement('button');
            acceptButton.className = 'accpet-btn username';
            acceptButton.setAttribute('data-user', friendReq._id);
            acceptButton.textContent = 'Accpet';
            acceptButton.onclick = function () {
                acceptFriendRequest(this, document.querySelector('.friends-count').innerText);
            };

            // Create the cancel icon
            const cancelDiv = document.createElement('div');
            const cancelIcon = document.createElement('i');
            cancelIcon.className = 'fa-solid fa-square-xmark cancel';
            cancelIcon.id = 'friends_deleteReq';
            cancelIcon.onclick = function (event) {
                deleteFriendRequest(friendReq._id, event, document.querySelector('.friends-count').innerText);
            };

            // Append the accept button and cancel icon to the button container
            cancelDiv.appendChild(cancelIcon);
            btnDiv.appendChild(acceptButton);
            btnDiv.appendChild(cancelDiv);

            // Append the user div and button container to the main container
            userReqContainer.appendChild(userDiv);
            userReqContainer.appendChild(btnDiv);

            document.getElementById('requests').appendChild(userReqContainer);
            document.querySelector('.friends-count').innerText = count
        })

        // accepting friend request (due to scope issue acceptFriendRequest(btn) function is moved in dashbord.ejs)

        // showing user in the list of sender's friends
        socket.on('req Accepted', (friend) => {
            document.getElementById('friends').innerHTML += `<div class="user">
                        <img src="${friend.profile}" alt="">
                        <span>
                            ${friend.name}
                        </span>
                    </div>
                    <div class="btn">
                        <button class="message-opt" data-user="${friend._id}" onclick="chat(event)">Send
                            message</button>
                    </div>`
        })


        showUserDetails()
    </script>
</body>

</html>